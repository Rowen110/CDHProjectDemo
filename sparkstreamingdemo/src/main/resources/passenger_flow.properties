
kafka1.bootstrap.servers = bigdata-dev-42:9093,master:9093
#消费者配置
kafka1.group.id = group-00
kafka1.auto.offset.reset = earliest
# passenger_flow_count_to_datacenter   客流数据流
# passenger_flow_profile_to_datacenter 区域设备关系数据
kafka1.security.protocol = SSL
kafka1.client.truststore.jks = D:\\kafka-key\\client.truststore.jks
kafka1.client.truststore.jks.password = 123456
kafka1.client.keystore.jks = D:\\kafka-key\\client.keystore.jks
kafka1.client.keystore.jks.password = 123456
kafka1.passengerflow.topic = passenger_flow_test
# 大屏topic  EGSC_SCP_SDC_STAT_DATA_TOPIC
Kafka1.bigscreen.topic = EGSC_SCP_SDC_STAT_DATA_TOPIC


#生产者配置
kafka1.acks = all
kafka1.retries = 2
//批量发送的字节数
kafka1.batch.size = 16384
//将会减少请求数目，但是同时会增加1ms的延迟
kafka1.linger.ms = 1
//用来缓存数据的内存大小
kafka1.buffer.memory = 33554432

#Zookeeper
zookeeper.url = 10.101.71.41:2181,10.101.71.42:2181,10.101.71.43:2181
zookeeper.session.timeout = 1000
zookeeper.connection.timeout = 1000

#Redis
redis.host = 10.101.71.41
redis.port = 6379
redis.timeout = 30000
redis.maxTotal = 10
redis.maxIdle = 10
redis.minIdle = 1


# 客流后台统计模块
redis.namespace.passengerflow = passenger_flow
# 织关系配置Key
redis.passengerflowprofile.key = passenger_flow:profile
# 大屏统计相关Key
redis.namespace.bigscreen = bigscreen
#全岛的组织ID
redis.bigscreen.idland.id = F1
