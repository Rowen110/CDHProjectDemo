<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cloudera.phoenixdemo.dao.outer.TagDataMapper" >
  <resultMap id="BaseResultMap" type="com.cloudera.phoenixdemo.entity.TagData" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="data_value" property="dataValue" jdbcType="VARCHAR" />
    <result column="hbase_table_name" property="hbaseTableName" jdbcType="VARCHAR" />
    <result column="filter_condition" property="filterCondition" jdbcType="VARCHAR" />
    <result column="remarks" property="remarks" jdbcType="VARCHAR" />
    <result column="sort" property="sort" jdbcType="INTEGER" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
    <result column="type_id" property="typeId" jdbcType="INTEGER" />
  </resultMap>

  <select id="findTagDataByIds" parameterType="java.util.List" resultMap="BaseResultMap" >
    select
      id, data_value, hbase_table_name, filter_condition,
      remarks, sort, create_date, update_date, type_id
    from tag_data
    <where>
      <if test="tagDataIds != null and tagDataIds.size > 0" >
        id in
        <foreach collection="tagDataIds" item="listItem" open="(" close=")" separator="," >
          #{listItem}
        </foreach>
      </if>
    </where>
  </select>
</mapper>